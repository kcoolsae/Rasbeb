# application.conf
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Copyright (C) 2015 Universiteit Gent
#
# This file is part of the Rasbeb project, an interactive web
# application for Bebras competitions.
#
# Corresponding author:
#
# Kris Coolsaet
# Department of Applied Mathematics, Computer Science and Statistics
# Ghent University
# Krijgslaan 281-S9
# B-9000 GENT Belgium
#
# The Rasbeb Web Application is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# The Rasbeb Web Application is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with the Rasbeb Web Application (file LICENSE in the
# distribution).  If not, see <http://www.gnu.org/licenses/>.

# This is the main configuration file for the application. It assumes development mode. In production mode
# a reference to a configuration file (prod.conf) must be given on the command line. An example is provided
# in this repository
# ~~~~~

## THIS IS A SAMPLE application.conf FILE. ADJUST TO YOUR NEEDS AND COPY TO application.conf

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.crypto.secret="changeme"

# The application languages
# ~~~~~
play.i18n.langs=[ "nl", "fr", "en" ]

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router 
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point. 
# Furthermore, it's assumed your route file is named properly. 
# So for an application router like `conf/my.application.Router`,
# you may need to define a router file `my.application.routes`.
# Default to Routes in the root package (and `conf/routes`)
# application.router=my.application.Routes

# db.DataAccess configuration
# ~~~~~
# (note: the test database configuration is hard coded into the db module and cannot be changed)

db.dev {
  driver=org.postgresql.Driver
  url="jdbc:postgresql://localhost:5432/rasbeb_dev"
  username=rasbeb_developer
  password=somesecret
}

# Mail
play.mailer {
  host = your.mail.relay
  port = 25
}

# Rasbeb specific
rasbeb.upload.script=/home/bebras/upload/upload.sh
rasbeb.questions.url="https://questions.country.com/bebras/"

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

