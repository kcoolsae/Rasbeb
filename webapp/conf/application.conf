# application.conf
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Copyright (C) 2015 Universiteit Gent
#
# This file is part of the Rasbeb project, an interactive web
# application for Bebras competitions.
#
# Corresponding author:
#
# Kris Coolsaet
# Department of Applied Mathematics, Computer Science and Statistics
# Ghent University
# Krijgslaan 281-S9
# B-9000 GENT Belgium
#
# The Rasbeb Web Application is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# The Rasbeb Web Application is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with the Degage Web Application (file LICENSE in the
# distribution).  If not, see <http://www.gnu.org/licenses/>.

# This is the main configuration file for the application.
# ~~~~~

## IMPORTANT NOTE: In addition there need to be three files dev.conf | prod.conf | test.conf
## which configure the databases for development, production and test mode. Samples are provided
## in the files dev-sample.conf, prod-sample.conf and test-sample.conf
##
## Similarly for {dev|prod}.hikaricp.properties

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="QY[E;ukR5^QtQG5iG5sKkl8>cEXCot4OoanGHIkBNPF6U^;Wra@b/;VYEP@SL<1m"

# The application languages
# ~~~~~
## [overridden] [i18n]
application.langs="en,fr,nl"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router 
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point. 
# Furthermore, it's assumed your route file is named properly. 
# So for an application router like `conf/my.application.Router`,
# you may need to define a router file `my.application.routes`.
# Default to Routes in the root package (and `conf/routes`)
# application.router=my.application.Routes

# db.DataAccess configuration
# ~~~~~ 

## [see {dev,prod,test}.conf]

# to use hikari instead of bone.cp
dbplugin=disabled

# The test database configuration is hard coded into the db module and cannot be changed

# Mail configuration
# ~~~~
##  [see {dev,prod,test}.conf]
# Evolutions

# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
#
# ebean.default="models.*"

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

